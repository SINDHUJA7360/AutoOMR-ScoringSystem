
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>OMR Evaluation System</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }
        
        body {
            background: linear-gradient(135deg, #6a11cb 0%, #2575fc 100%);
            color: #333;
            min-height: 100vh;
            padding: 20px;
        }
        
        .container {
            max-width: 1200px;
            margin: 0 auto;
            background: rgba(255, 255, 255, 0.95);
            border-radius: 15px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }
        
        header {
            background: #4a00e0;
            color: white;
            padding: 20px;
            text-align: center;
        }
        
        h1 {
            font-size: 2.5rem;
            margin-bottom: 10px;
        }
        
        .subtitle {
            font-size: 1.2rem;
            opacity: 0.9;
        }
        
        .main-content {
            display: flex;
            flex-wrap: wrap;
            padding: 20px;
            gap: 20px;
        }
        
        .upload-section {
            flex: 1;
            min-width: 300px;
            padding: 20px;
            background: #f8f9fa;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }
        
        .preview-section {
            flex: 2;
            min-width: 500px;
            padding: 20px;
            background: white;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }
        
        .upload-area {
            border: 3px dashed #4a00e0;
            border-radius: 10px;
            padding: 30px;
            text-align: center;
            margin: 20px 0;
            cursor: pointer;
            transition: all 0.3s;
        }
        
        .upload-area:hover {
            background: #e6e6ff;
        }
        
        .upload-icon {
            font-size: 3rem;
            color: #4a00e0;
            margin-bottom: 15px;
        }
        
        .btn {
            background: #4a00e0;
            color: white;
            border: none;
            padding: 12px 25px;
            border-radius: 50px;
            cursor: pointer;
            font-size: 1rem;
            font-weight: 600;
            transition: all 0.3s;
            display: inline-block;
            margin: 10px 0;
        }
        
        .btn:hover {
            background: #3a00b0;
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
        }
        
        .answer-sheet {
            background: #f0f0f0;
            border-radius: 10px;
            padding: 20px;
            margin: 20px 0;
            position: relative;
            overflow: hidden;
        }
        
        .sheet-header {
            text-align: center;
            margin-bottom: 20px;
            padding-bottom: 10px;
            border-bottom: 2px solid #4a00e0;
        }
        
        .questions {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(50px, 1fr));
            gap: 10px;
        }
        
        .question {
            background: white;
            border-radius: 5px;
            padding: 10px;
            text-align: center;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }
        
        .options {
            display: flex;
            justify-content: space-around;
            margin-top: 5px;
        }
        
        .option {
            width: 20px;
            height: 20px;
            border-radius: 50%;
            border: 1px solid #999;
            display: inline-block;
            cursor: pointer;
        }
        
        .option.selected {
            background: #4a00e0;
            border-color: #4a00e0;
        }
        
        .results {
            background: #e6f7ff;
            border-radius: 10px;
            padding: 20px;
            margin-top: 20px;
        }
        
        .score {
            font-size: 2rem;
            font-weight: bold;
            color: #4a00e0;
            text-align: center;
            margin: 10px 0;
        }
        
        .stats {
            display: flex;
            justify-content: space-around;
            margin: 20px 0;
        }
        
        .stat-box {
            background: white;
            padding: 15px;
            border-radius: 10px;
            text-align: center;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            flex: 1;
            margin: 0 10px;
        }
        
        .stat-value {
            font-size: 1.8rem;
            font-weight: bold;
            color: #4a00e0;
        }
        
        .stat-label {
            color: #666;
            font-size: 0.9rem;
        }
        
        .detailed-results {
            margin-top: 20px;
        }
        
        .result-item {
            display: flex;
            justify-content: space-between;
            padding: 8px 0;
            border-bottom: 1px solid #eee;
        }
        
        .correct {
            color: #28a745;
        }
        
        .incorrect {
            color: #dc3545;
        }
        
        footer {
            text-align: center;
            padding: 20px;
            background: #4a00e0;
            color: white;
        }
        
        @media (max-width: 768px) {
            .main-content {
                flex-direction: column;
            }
            
            .preview-section, .upload-section {
                min-width: 100%;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <header>
            <h1>OMR Evaluation System</h1>
            <p class="subtitle">Automated Answer Sheet Scoring and Analysis</p>
        </header>
        
        <div class="main-content">
            <div class="upload-section">
                <h2>Upload Answer Sheets</h2>
                <p>Upload scanned images of OMR answer sheets for automatic evaluation.</p>
                
                <div class="upload-area" id="dropZone">
                    <div class="upload-icon">üìÅ</div>
                    <h3>Drag & Drop Files Here</h3>
                    <p>or</p>
                    <label for="fileInput" class="btn">Browse Files</label>
                    <input type="file" id="fileInput" accept="image/*" style="display: none;">
                </div>
                
                <div class="settings">
                    <h3>Evaluation Settings</h3>
                    <div class="form-group">
                        <label for="answerKey">Answer Key:</label>
                        <input type="text" id="answerKey" placeholder="e.g., A,B,C,D,A,B,C,D,A,B" value="A,B,C,D,A,B,C,D,A,B,C,D,A,B,C,D,A,B,C,D">
                    </div>
                    <div class="form-group">
                        <label for="pointsPerQuestion">Points per Question:</label>
                        <input type="number" id="pointsPerQuestion" value="1" min="0.5" step="0.5">
                    </div>
                    <div class="form-group">
                        <label for="negativeMarking">Negative Marking:</label>
                        <input type="checkbox" id="negativeMarking">
                    </div>
                    <button class="btn" id="processBtn">Process Answer Sheets</button>
                </div>
            </div>
            
            <div class="preview-section">
                <h2>Answer Sheet Preview</h2>
                <p>Review the detected answers and evaluation results.</p>
                
                <div class="answer-sheet">
                    <div class="sheet-header">
                        <h3>Sample Answer Sheet</h3>
                        <p>Roll Number: 12345 | Date: 06/11/2023</p>
                    </div>
                    
                    <div class="questions" id="questionsContainer">
                        <!-- Questions will be generated here -->
                    </div>
                </div>
                
                <div class="results">
                    <h2>Evaluation Results</h2>
                    <div class="score">Score: <span id="totalScore">0</span></div>
                    
                    <div class="stats">
                        <div class="stat-box">
                            <div class="stat-value" id="totalQuestions">20</div>
                            <div class="stat-label">Total Questions</div>
                        </div>
                        <div class="stat-box">
                            <div class="stat-value" id="answered">0</div>
                            <div class="stat-label">Answered</div>
                        </div>
                        <div class="stat-box">
                            <div class="stat-value" id="correct">0</div>
                            <div class="stat-label">Correct</div>
                        </div>
                        <div class="stat-box">
                            <div class="stat-value" id="incorrect">0</div>
                            <div class="stat-label">Incorrect</div>
                        </div>
                    </div>
                    
                    <div class="detailed-results">
                        <h3>Detailed Analysis</h3>
                        <div id="resultsList">
                            <!-- Results will be displayed here -->
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <footer>
            <p>OMR Evaluation System ¬© 2023 | Automated Answer Sheet Scoring</p>
        </footer>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Generate sample questions
            generateQuestions(20);
            
            // Set up event listeners
            document.getElementById('processBtn').addEventListener('click', processAnswerSheets);
            document.getElementById('fileInput').addEventListener('change', handleFileUpload);
            
            // Set up drag and drop
            const dropZone = document.getElementById('dropZone');
            dropZone.addEventListener('dragover', function(e) {
                e.preventDefault();
                dropZone.style.background = '#e6e6ff';
            });
            
            dropZone.addEventListener('dragleave', function() {
                dropZone.style.background = '';
            });
            
            dropZone.addEventListener('drop', function(e) {
                e.preventDefault();
                dropZone.style.background = '';
                if (e.dataTransfer.files.length > 0) {
                    handleFileUpload({target: {files: e.dataTransfer.files}});
                }
            });
            
            // Make drop zone clickable
            dropZone.addEventListener('click', function() {
                document.getElementById('fileInput').click();
            });
        });
        
        function generateQuestions(count) {
            const questionsContainer = document.getElementById('questionsContainer');
            questionsContainer.innerHTML = '';
            
            for (let i = 1; i <= count; i++) {
                const question = document.createElement('div');
                question.className = 'question';
                question.innerHTML = `
                    <div>Q${i}</div>
                    <div class="options">
                        <span class="option" data-question="${i}" data-option="A">A</span>
                        <span class="option" data-question="${i}" data-option="B">B</span>
                        <span class="option" data-question="${i}" data-option="C">C</span>
                        <span class="option" data-question="${i}" data-option="D">D</span>
                    </div>
                `;
                questionsContainer.appendChild(question);
            }
            
            // Add click event to options
            document.querySelectorAll('.option').forEach(option => {
                option.addEventListener('click', function() {
                    const questionNum = this.getAttribute('data-question');
                    // Clear other selections for this question
                    document.querySelectorAll(`.option[data-question="${questionNum}"]`).forEach(opt => {
                        opt.classList.remove('selected');
                    });
                    // Select this option
                    this.classList.add('selected');
                });
            });
        }
        
        function handleFileUpload(event) {
            if (event.target.files.length > 0) {
                const file = event.target.files[0];
                const fileName = file.name;
                
                // In a real app, you would process the image here
                // For this demo, we'll just show a success message and simulate processing
                alert(`File "${fileName}" uploaded successfully! Click "Process Answer Sheets" to evaluate.`);
            }
        }
        
        function processAnswerSheets() {
            // Get answer key from input
            const answerKey = document.getElementById('answerKey').value.split(',');
            const pointsPerQuestion = parseFloat(document.getElementById('pointsPerQuestion').value);
            const negativeMarking = document.getElementById('negativeMarking').checked;
            
            // Get user answers from the UI
            const userAnswers = [];
            document.querySelectorAll('.question').forEach((question, index) => {
                const selectedOption = question.querySelector('.option.selected');
                userAnswers[index] = selectedOption ? selectedOption.getAttribute('data-option') : '';
            });
            
            // Calculate score and results
            let totalScore = 0;
            let answered = 0;
            let correct = 0;
            let incorrect = 0;
            
            const resultsList = document.getElementById('resultsList');
            resultsList.innerHTML = '';
            
            userAnswers.forEach((answer, index) => {
                if (answer) {
                    answered++;
                    
                    const resultItem = document.createElement('div');
                    resultItem.className = 'result-item';
                    
                    if (answer === answerKey[index]) {
                        correct++;
                        totalScore += pointsPerQuestion;
                        resultItem.innerHTML = `Q${index+1}: Correct <span class="correct">+${pointsPerQuestion}</span>`;
                    } else {
                        incorrect++;
                        if (negativeMarking) {
                            totalScore -= pointsPerQuestion / 2;
                            resultItem.innerHTML = `Q${index+1}: Incorrect <span class="incorrect">-${pointsPerQuestion/2}</span>`;
                        } else {
                            resultItem.innerHTML = `Q${index+1}: Incorrect <span class="incorrect">0</span>`;
                        }
                    }
                    
                    resultsList.appendChild(resultItem);
                }
            });
            
            // Update UI with results
            document.getElementById('totalScore').textContent = totalScore.toFixed(1);
            document.getElementById('answered').textContent = answered;
            document.getElementById('correct').textContent = correct;
            document.getElementById('incorrect').textContent = incorrect;
            
            // Show results section
            document.querySelector('.results').style.display = 'block';
        }
    </script>
</body>
</html>
